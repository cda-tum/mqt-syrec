name: CI
on:
  push:
    branches:
      - main
  pull_request:
  merge_group:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CTEST_PARALLEL_LEVEL: 3
  BOOST_VERSION_MAJOR: 1
  BOOST_VERSION_MINOR: 76
  BOOST_VERSION_PATCH: 0

defaults:
  run:
    shell: bash

jobs:
  cpp-tests-ubuntu:
    name: üêß Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install boost
        run: sudo apt-get update && sudo apt-get -y install libboost-all-dev
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-tests-ubuntu-latest
      - name: Set up mold as linker
        uses: rui314/setup-mold@v1
      - name: Install Ninja
        run: pipx install ninja
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600

  cpp-tests-macos:
    name: üçé Release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install boost
        run: brew install boost
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-tests-macos-latest
      - name: Install Ninja
        run: pipx install ninja
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600

  cpp-tests-windows:
    name: üèÅ Release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Install boost
        uses: MarkusJx/install-boost@v2.4.4
        id: install-boost
        with:
          boost_version: ${{ env.BOOST_VERSION_MAJOR }}.${{ env.BOOST_VERSION_MINOR }}.${{ env.BOOST_VERSION_PATCH }}
          platform_version: 2019
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          windows_compile_environment: msvc
          override_cache_key: c++-tests-windows-latest
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -T "ClangCl" -DBoost_USE_MULTITHREADED=ON -DBoost_USE_STATIC_RUNTIME=OFF
        env:
          BOOST_ROOT: ${{ steps.install-boost.outputs.BOOST_ROOT }}
      - name: Build
        uses: nick-fields/retry@v3 # Windows builds with MSVC are flaky and frequently run out of heap space
        with:
          timeout_minutes: 15
          max_attempts: 5
          shell: bash
          retry_on: error
          command: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600

  coverage:
    name: üìà Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install boost
        run: sudo apt-get update && sudo apt-get -y install libboost-all-dev
      - name: Setup ccache
        uses: Chocobo1/setup-ccache-action@v1
        with:
          prepend_symlinks_to_path: false
          override_cache_key: c++-coverage
      - name: Set up mold as linker
        uses: rui314/setup-mold@v1
      - name: Install Ninja
        run: pipx install ninja
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DENABLE_COVERAGE=ON
      - name: Build
        run: cmake --build build --config Debug
      - name: Test
        run: ctest -C Debug --output-on-failure --test-dir build --repeat until-pass:3 --timeout 600
      - name: Upload coverage to Codecov
        # Coverage uploads can be flaky, so we retry them a few times.
        uses: Wandalen/wretry.action@v1.3.0
        with:
          action: codecov/codecov-action@v3
          attempt_limit: 5
          attempt_delay: 2000
          with: |
            fail_ci_if_error: true
            flags: cpp
            gcov: true
            gcov_ignore: "extern/**/*"
            token: ${{ secrets.token }}

{
  "unaryIncrementAssignmentOf1DSignalWithSingleValueOmittingExplicitAccessOnValueOfDimension": {
    "inputCircuit": "module main(inout a(4)) ++= a",
    "expectedCircuit": "module main(inout a(4)) ++= a[0]"
  },
  "unaryIncrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantIndex": {
    "inputCircuit": "module main(inout a(4)) ++= a.0",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].0"
  },
  "unaryIncrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) ++= a.(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].1"
  },
  "unaryIncrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeUsingConstantIndices": {
    "inputCircuit": "module main(inout a(4)) ++= a.1:2",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].1:2"
  },
  "unaryIncrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) ++= a.1:(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].1:1"
  },
  "unaryIncrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionNotSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a.1:($i - 3) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a[0].1:($i - 3) rof"
  },
  "unaryIncrementAssignmentOfNDSignalOfTypeInout": {
    "inputCircuit": "module main(inout a[2][3](4)) ++= a[0][1]"
  },
  "unaryIncrementAssignmentOfNDSignalOfTypeOut": {
    "inputCircuit": "module main(out a[2][3](4)) ++= a[0][1]"
  },
  "unaryIncrementAssignmentOfNDSignalOfTypeWireDefinedInSingleVariableGroupDeclaration": {
    "inputCircuit": "module main() wire a[2][3](4) ++= a[0][1]"
  },
  "unaryIncrementAssignmentOfNDSignalOfTypeWireDefinedInNVariableGroupDeclaration": {
    "inputCircuit": "module main(in b(2)) wire c(2), a[2][3](4) ++= a[0][1]"
  },

  "unaryDecrementAssignmentOf1DSignalWithSingleValueOmittingExplicitAccessOnValueOfDimension": {
    "inputCircuit": "module main(inout a(4)) --= a",
    "expectedCircuit": "module main(inout a(4)) --= a[0]"
  },
  "unaryDecrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantIndex": {
    "inputCircuit": "module main(inout a(4)) --= a.0",
    "expectedCircuit": "module main(inout a(4)) --= a[0].0"
  },
  "unaryDecrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) --= a.(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) --= a[0].1"
  },
  "unaryDecrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeUsingConstantIndices": {
    "inputCircuit": "module main(inout a(4)) --= a.1:2",
    "expectedCircuit": "module main(inout a(4)) --= a[0].1:2"
  },
  "unaryDecrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) --= a.1:(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) --= a[0].1:1"
  },
  "unaryDecrementAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionNotSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do --= a.1:($i - 3) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do --= a[0].1:($i - 3) rof"
  },
  "unaryDecrementAssignmentOfNDSignalOfTypeInout": {
    "inputCircuit": "module main(inout a[2][3](4)) --= a[0][1]"
  },
  "unaryDecrementAssignmentOfNDSignalOfTypeOut": {
    "inputCircuit": "module main(out a[2][3](4)) --= a[0][1]"
  },
  "unaryDecrementAssignmentOfNDSignalOfTypeWireDefinedInSingleVariableGroupDeclaration": {
    "inputCircuit": "module main() wire a[2][3](4) --= a[0][1]"
  },
  "unaryDecrementAssignmentOfNDSignalOfTypeWireDefinedInNVariableGroupDeclaration": {
    "inputCircuit": "module main(in b(2)) wire c(2), a[2][3](4) --= a[0][1]"
  },

  "unaryNegationAssignmentOf1DSignalWithSingleValueOmittingExplicitAccessOnValueOfDimension": {
    "inputCircuit": "module main(inout a(4)) ~= a",
    "expectedCircuit": "module main(inout a(4)) ~= a[0]"
  },
  "unaryNegationAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantIndex": {
    "inputCircuit": "module main(inout a(4)) ~= a.0",
    "expectedCircuit": "module main(inout a(4)) ~= a[0].0"
  },
  "unaryNegationAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitUsingConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) ~= a.(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) ~= a[0].1"
  },
  "unaryNegationAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeUsingConstantIndices": {
    "inputCircuit": "module main(inout a(4)) ~= a.1:2",
    "expectedCircuit": "module main(inout a(4)) ~= a[0].1:2"
  },
  "unaryNegationAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) ~= a.1:(#a - 3)",
    "expectedCircuit": "module main(inout a(4)) ~= a[0].1:1"
  },
  "unaryNegationAssignmentOf1DSIgnalWithSingleValueWithImplicitAccessOnValueOfDimensionWithAccessOnBitrangeWithBitrangeStartIndexConstantAndEndIndexConstantExpressionNotSimplifyingToConstantValue": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ~= a.1:($i - 3) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ~= a[0].1:($i - 3) rof"
  },
  "unaryNegationAssignmentOfNDSignalOfTypeInout": {
    "inputCircuit": "module main(inout a[2][3](4)) ~= a[0][1]"
  },
  "unaryNegationAssignmentOfNDSignalOfTypeOut": {
    "inputCircuit": "module main(out a[2][3](4)) ~= a[0][1]"
  },
  "unaryNegationAssignmentOfNDSignalOfTypeWireDefinedInSingleVariableGroupDeclaration": {
    "inputCircuit": "module main() wire a[2][3](4) ~= a[0][1]"
  },
  "unaryNegationAssignmentOfNDSignalOfTypeWireDefinedInNVariableGroupDeclaration": {
    "inputCircuit": "module main(in b(2)) wire c(2), a[2][3](4) ~= a[0][1]"
  }
}
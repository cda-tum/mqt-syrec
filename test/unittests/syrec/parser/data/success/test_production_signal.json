{
  "omittingExplicitAccessOnOnlyValueOf1DSignalPossible": {
    "inputCircuit": "module main(inout a(4)) ++= a",
    "expectedCircuit": "module main(inout a(4)) ++= a[0]"
  },
  "accessingBitUsingConstantIndexOf1DSignalWithImplicitAcessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4)) ++= a[0].0"
  },
  "accessingBitrangeUsingConstantIndecesOf1DSignalWithImplicitAcessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4)) ++= a[0].0:2"
  },
  "accessingBitUsingDynamicIndexEvaluatingToConstantOf1DSignalWithImplicitAccessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4)) ++= a.((#a - 3) * 2)",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].2"
  },
  "accessingBitUsingDynamicIndexNotEvaluatingToConstantOf1DSignalWithImplicitAccessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a.(($i - 2) * $i) rof",
    "expectedCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a[0].(($i - 2) * $i) rof"
  },
  "accessingBitrangeUsingConstantIndexForBitrangeStartAndDynamicExpressionForBitrangeEndEvaluatingToConstantOf1DSignalWithImplicitAccessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4)) ++= a.0:(#a - 2)",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].0:2"
  },
  "accessingBitrangeUsingConstantIndexForBitrangeStartAndDynamicExpressionForBitrangEndNotEvaluatingToConstantOf1DSignalWithImplicitAccessOnOnlyValueOfDimensionPossible": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a.0:($i - 2) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a[0].0:($i - 2) rof"
  },

  "accessingBitrangeUsingConstantIndexForBitrangeStartAndConstantIndexForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4)) ++= a.2:0",
    "expectedCircuit": "module main(inout a(4)) ++= a[0].2:0"
  },
  "accessingBitrangeUsingConstantIndexForBitrangeStartAndConstantExpressionEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.0:(2 + (#b - 2))",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].0:2"
  },
  "accessingBitrangeUsingConstantIndexForBitrangeStartAndConstantExpressionNotEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a.0:(2 + ($i - 2)) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a[0].0:(2 + ($i - 2)) rof"
  },

  "accessingBitrangeUsingSignalBitwidthForBitrangeStartAndConstantIndexForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.#b:0",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:0"
  },
  "accessingBitrangeUsingSignalBitwidthForBitrangeStartAndConstantExpressionEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.#b:(2 + (#b - 2))",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:2"
  },
  "accessingBitrangeUsingSignalBitwidthForBitrangeStartAndConstantExpressionNotEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a.#b:(2 + ($i - 2)) rof",
    "expectedCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a[0].1:(2 + ($i - 2)) rof"
  },
  "accessingBitrangeUsingSignalBitwidthForBitrangeStartAndSignalBitwidthForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.#b:#b",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:2"
  },

  "accessingBitrangeUsingConstantExpressionEvaluatingToConstantForBitrangeStartAndConstantIndexForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.(#a - 2):0",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:0"
  },
  "accessingBitrangeUsingConstantExpressionEvaluatingToConstantForBitrangeStartAndConstantExpressionEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.(#a - 2):(2 + (#b - 2))",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:2"
  },
  "accessingBitrangeUsingConstantExpressionEvaluatingToConstantForBitrangeStartAndConstantExpressionNotEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a.(#a - 2):(2 + ($i - 2)) rof",
    "expectedCircuit": "module main(inout a(4)) for $i = 0 to 3 step 1 do ++= a[0].2:(2 + ($i - 2)) rof"
  },
  "accessingBitrangeUsingConstantExpressionEvaluatingToConstantForBitrangeStartAndSignalBitwidthForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) ++= a.(#a - 2):#b",
    "expectedCircuit": "module main(inout a(4), in b(2)) ++= a[0].2:2"
  },

  "accessingBitrangeUsingConstantExpressionNotEvaluatingToConstantForBitrangeStartAndConstantIndexForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(2)) for $i = 0 to 3 step 1 do ++= a.($i - 2):0 rof",
    "expectedCircuit": "module main(inout a(4), in b(2)) for $i = 0 to 3 step 1 do ++= a[0].($i - 2):0 rof"
  },
  "accessingBitrangeUsingConstantExpressionNotEvaluatingToConstantForBitrangeStartAndConstantExpressionEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 do ++= a[0].($i + 2):(2 + (#b / 2)) rof",
    "expectedCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a[0].($i + 2):2 rof"
  },
  "accessingBitrangeUsingConstantExpressionNotEvaluatingToConstantForBitrangeStartAndConstantExpressionNotEvaluatingToConstantForBitrangeEnd": {
    "inputCircuit": "module main(inout a(4), in b(1)) for $i = 0 to 3 step 1 do ++= a[0].($i - 2):(2 + ($i - 2)) rof"
  },


  "accessingValueOfDimensionUsingConstantIndex": {
    "inputCircuit": "module main(inout a[2][3](4)) ++= a[0][2]"
  },
  "accessingValueOfDimensionUsingConstantExpressionEvaluatingToConstant": {
    "inputCircuit": "module main(inout a[2][3](4)) ++= a[(#a - 3)][2]",
    "expectedCircuit": "module main(inout a[2][3](4)) ++= a[1][2]"
  },
  "accessingValueOfDimensionUsingConstantExpressionNotEvaluatingToConstant": {
    "inputCircuit": "module main(inout a[2][3](4)) for $i = 0 to 3 do ++= a[(#a - 3)][(($i + 2) - 1)] rof",
    "expectedCircuit": "module main(inout a[2][3](4)) for $i = 0 to 3 step 1 do ++= a[1][(($i + 2) - 1)] rof"
  },
  "accessingValueOfDimensionUsingShiftExpression": {
    "inputCircuit": "module main(inout a[3](4), in b(2)) --= a[((b[0] << 2) - 1)]"
  },
  "accessingValueOfDimensionUsing1DSignalWithSingleValueIdentifier": {
    "inputCircuit": "module main(inout a[3](4), in b(2)) --= a[b[0]]"
  },
  "accessingValueOfDimensionUsingVariableBitwidth": {
    "inputCircuit": "module main(inout a[3](4), in b(2)) --= a[#b]",
    "expectedCircuit": "module main(inout a[3](4), in b(2)) --= a[2]"
  },
  "accessingBitOfNDSignal": {
    "inputCircuit": "module main(inout a[2][3](4)) a[0][1].0 += a[1][2].2"
  },
  "accessingBitrangeOfNDSignal": {
    "inputCircuit": "module main(inout a[2][3](4)) a[0][1].(#a - 1):2 += a[1][2].1:0",
    "expectedCircuit": "module main(inout a[2][3](4)) a[0][1].3:2 += a[1][2].1:0"
  },

  "operandBitwidthSizeRestrictionOnlyLocalToCurrentlyProcessedDimensionOf1DSignal": {
    "inputCircuit": "module main(inout a[2](4), in b(2), in c(4)) a[(b + 2)] += c",
    "expectedCircuit": "module main(inout a[2](4), in b(2), in c(4)) a[(b[0] + 2)] += c[0]"
  },
  "operandBitwidthSizeRestrictionOnlyLocalToCurrentlyProcessedDimensionOfNDSignal": {
    "inputCircuit": "module main(inout a[2][4](4), in b(2), in c(4)) a[(b + 2)][(c - 1)] += c",
    "expectedCircuit": "module main(inout a[2][4](4), in b(2), in c(4)) a[(b[0] + 2)][(c[0] - 1)] += c[0]"
  },
  "operandBitwidthSizeRestrictionFromDimensionAccessNotAppliedToOuterVariableAccessDefinitionAccessingBit": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b.0:2 + 2)].0",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].0:2 + 2)].0"
  },
  "operandBitwidthSizeRestrictionFromDimensionAccessNotAppliedToOuterVariableAccessDefinitionAccessingWholeSignalBitwidth": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b.0:2 + 2)]",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].0:2 + 2)]"
  },
  "operandBitwidthSizeRestrictionFromDimensionAccessNotAppliedToOuterVariableAccessDefinitionAccessingSmallerBitrange": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b.0:2 + 2)].1:2",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].0:2 + 2)].1:2"
  },
  "operandBitwidthSizeRestrictionFromDimensionAccessNotAppliedToOuterVariableAccessDefinitionAccessingEquallyLargeBitrange": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b.0:2 + 2)].1:3",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].0:2 + 2)].1:3"
  },
  "operandBitwidthSizeRestrictionFromDimensionAccessNotAppliedToOuterVariableAccessDefinitionAccessingLargerBitrange": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b.1:2 + 2)].0:2",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].1:2 + 2)].0:2"
  },
  "operandBitwidthSizeRestrictionFromShiftEpressionOfDimensionAccessNotAppliedToOuterVariableAccess": {
    "inputCircuit": "module main(inout a[2](4), in b(3)) ++= a[((b.1 << 2) + 2)].0:2",
    "expectedCircuit": "module main(inout a[2](4), in b(3)) ++= a[(b[0].1 << 2)].0:2"
  }
}